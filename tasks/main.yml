---

# see for uci commands: https://openwrt.org/docs/guide-user/base-system/uci

# if it fails: you need to set the hostname first
#   uci set system.system=system
#   uci set system.system.hostname=<LOCATION-NR>-AP<NR>
#   uci set system.@system[0].hostname==<LOCATION-NR>-AP<NR>
- name: Get hostname
  ansible.builtin.raw: 'uci get system.system.hostname'
  changed_when: false
  check_mode: false
  register: owrt_cnf_hostname

- name: Parse hostname
  ansible.builtin.set_fact:
    ap_name: "{{ owrt_cnf_hostname.stdout_lines[0] }}"

- name: Get hardware
  ansible.builtin.raw: 'ubus call system board'
  changed_when: false
  check_mode: false
  register: owrt_hw

- name: Get running config
  ansible.builtin.raw: 'uci show'
  changed_when: false
  check_mode: false
  register: owrt_run

- name: Hardware | All
  ansible.builtin.import_tasks: 'hw_all.yml'

- name: Hardware | Mikrotik wAP
  ansible.builtin.include_tasks: 'hw_mikrotik_wap.yml'
  vars:
    ap_mac_address: "{{ ap_name | generate_mikrotik_mac_address }}"  # will get randomized on reboot otherwise
    ap_device_net: 'eth0'
  when: "'MikroTik RouterBOARD wAP' in owrt_hw.stdout"

- name: Hardware | Mikrotik hAP
  ansible.builtin.include_tasks: 'hw_mikrotik_hap.yml'
  vars:
    ap_device_net: 'eth1'
  when:
    - "'MikroTik hAP ac2' in owrt_hw.stdout"
    - "'OpenWrt 23' not in owrt_hw.stdout"

- name: Hardware | Default
  ansible.builtin.include_tasks: 'hw_default.yml'
  when:
    - "'MikroTik RouterBOARD wAP' not in owrt_hw.stdout"
    - "'MikroTik hAP ac2' not in owrt_hw.stdout"

- name: "{{ ap_name }} | WLANs"
  ansible.builtin.import_tasks: wlans.yml

- name: "{{ ap_name }} | Remove default wlans"
  ansible.builtin.raw: "uci delete {{ setting }}"
  loop_control:
    loop_var: setting
  loop:
    - 'wireless.default_radio0'
    - 'wireless.default_radio1'
  when: setting in owrt_run.stdout
  notify: apply-wlan
